# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
version: '3'

vars:
  BASETAG: 0.2.0-trinity
  IMAGE: nuvolaris/nuvolaris-operator
  REPO: ghcr.io
  TAG:
    sh: git describe --tags --abbrev=0 2>/dev/null || echo latest
  TEST: ""

dotenv:
  - .env

tasks:

  setup:
    deps: [prebuild]
    cmds:
      - poetry install
    status:
      - test -e $GOBIN/kopf

  prebuild: 
    - | 
        if test -d ../nuvolaris-controller
        then cp -v ../nuvolaris-controller/openwhisk/ansible/files/*.json nuvolaris/files
        else echo "not found ../nuvolaris-controller/openwhisk"
        fi
  image-tag: git tag -d $(git tag) ; git tag -f {{.BASETAG}}.$(date +%y%m%d%H)

  buildx-and-push:
    deps: [prebuild]
    cmds:
      - docker buildx build --platform linux/amd64,linux/arm64 -t {{.REPO}}/{{.IMAGE}}:{{.TAG}} . --push

  build-and-load:
    deps: [prebuild]
    cmds:
      - task build
      - kind load docker-image {{.REPO}}/{{.IMAGE}}:{{.TAG}} --name=nuvolaris

  build: docker build . -t {{.REPO}}/{{.IMAGE}}:{{.TAG}} {{.CLI_ARGS}}

  buildx: docker buildx build --platform linux/amd64,linux/arm64 -t {{.REPO}}/{{.IMAGE}}:{{.TAG}} .

  run: 
    cmds:
    - kubectl apply -f tests/deploy/operator-crd.yaml
    - poetry run kopf run -n nuvolaris -m nuvolaris nuvolaris/main.py {{.CLI_ARGS}}

  env: env

  cli: poetry run ipython -i profile.ipy

  unit: |
    for test in nuvolaris/{{.TEST}}*.py
    do poetry run python3 -m doctest $test {{.CLI_ARGS}}
    done

  test:
    - task: unit
    #- cd tests && task test

  start-couchdb: kubectl apply -f deploy/couchdb

  init-couchdb: poetry run python nuvolaris/couchdb_init.py
  
  stop-couchdb: kubectl delete -f deploy/couchdb
  
  config: task config -d nuvolaris-test

  use: 
    cmds: 
      - |
        if test -z "{{.CLI_ARGS}}"
        then kubectl config view -o json | jq '.contexts | .[].name' -r  |  awk '{print NR, $0}'
            echo current: "$(kubectl config current-context)"
        else CTX=$(kubectl config view -o json | jq '.contexts | .[].name' -r | awk 'NR=={{.CLI_ARGS}} { print}')
            kubectl config use-context "$CTX"
            kubectl get nodes
        fi
    silent: true

  1: task use -- 1
  2: task use -- 2
  3: task use -- 3
  4: task use -- 4
  5: task use -- 5
